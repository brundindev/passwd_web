rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función para verificar si el usuario es administrador (por email)
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'brundindev@gmail.com';
    }
    
    // Regla general: denegar acceso por defecto
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Regla para la colección "usuarios"
    match /usuarios/{userId} {
      // Permitir lectura si el usuario está autenticado y es el propio usuario
      allow read: if request.auth != null && 
                 (request.auth.uid == userId || isAdmin());
      
      // Permitir escritura si el usuario está autenticado y es el propio usuario
      allow write: if request.auth != null && 
                  (request.auth.uid == userId || isAdmin());
      
      // Permitir acceso a las subcolecciones del usuario
      match /{subcollection}/{document} {
        allow read, write: if request.auth != null && 
                          (request.auth.uid == userId || isAdmin());
      }
    }
    
    // Reglas para la colección "tickets"
    match /tickets/{ticketId} {
      // Cualquier usuario autenticado puede crear tickets
      allow create: if request.auth != null;
      
      // Los usuarios pueden leer sus propios tickets
      allow read: if request.auth != null && 
                 (resource.data.userId == request.auth.uid || isAdmin());
      
      // Los usuarios pueden actualizar sus propios tickets
      allow update: if request.auth != null && 
                   (resource.data.userId == request.auth.uid || isAdmin());
      
      // Solo los administradores pueden eliminar tickets
      allow delete: if isAdmin();
    }
    
    // Reglas para la colección "notifications"
    match /notifications/{notificationId} {
      // Permitir crear notificaciones a cualquier usuario autenticado
      allow create: if request.auth != null;
      
      // Permitir leer notificaciones:
      // 1. Si el usuario está autenticado Y
      // 2. Si el usuario es el destinatario de la notificación O es administrador
      allow read: if request.auth != null && 
                 (resource.data.userId == request.auth.uid || isAdmin());
      
      // Permitir actualizar y eliminar notificaciones:
      // 1. Si el usuario está autenticado Y
      // 2. Si el usuario es el destinatario de la notificación O es administrador
      allow update, delete: if request.auth != null && 
                           (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // Reglas para la colección "folders"
    match /folders/{folderId} {
      // Todos los usuarios autenticados pueden leer las carpetas
      allow read: if request.auth != null;
      
      // Solo los administradores pueden crear, actualizar o eliminar carpetas
      allow write: if isAdmin();
    }
    
    // Regla por defecto para todas las demás colecciones
    match /{document=**} {
      // Por defecto, los administradores tienen acceso completo
      allow read, write: if isAdmin();
    }
  }
} 